<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.oimboi.service.s2s.dao.ibatis.mapper.CodeMapper">
	<resultMap id="BaseResultMap" type="com.oimboi.service.s2s.dao.model.Code">		
		
			<id property="id" column="id" />
			<result property="no" column="no" />
			<result property="name" column="name" />
			<result property="itemNo" column="item_no" />
			<result property="itemKey" column="item_key" />
			<result property="itemValue" column="item_value" />
			<result property="sequence" column="sequence" />
			<result property="isUse" column="is_use" />
			<result property="createTime" column="create_time" />
			<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="Column_List_Id_Gen">
			id
	</sql>
	<sql id="Column_List_Base_Gen">
			id,
			no,
			name,
			item_no,
			item_key,
			item_value,
			sequence,
			is_use,
			create_time,
			update_time
	</sql>
	<sql id="Where_Clause_Id_Gen">
		and id=#{id}
		<include refid="Where_Clause_Id_Extend" />
	</sql>
	<sql id="Where_Clause_Normal_Gen">
		<if test="id !=  null">
			and id=#{id}
		</if>
		<if test="fromId !=  null">
			and id>#{fromId}
		</if>
		<if test="no !=  null">			        
			and no=#{no}
		</if>
		<if test="name !=  null">			        
			and name=#{name}
		</if>
		<if test="itemNo !=  null">			        
			and item_no=#{itemNo}
		</if>
		<if test="itemKey !=  null">			        
			and item_key=#{itemKey}
		</if>
		<if test="itemValue !=  null">			        
			and item_value=#{itemValue}
		</if>
		<if test="sequence !=  null">			        
			and sequence=#{sequence}
		</if>
		<if test="isUse !=  null">			        
			and is_use=#{isUse}
		</if>
		<if test="createTime !=  null">			        
			and create_time=#{createTime}
		</if>
		<if test="updateTime !=  null">			        
			and update_time=#{updateTime}
		</if>
		<include refid="Where_Clause_Normal_Extend" />
	</sql>
	<sql id="Update_Set_Normal_Gen">
		<!--
		<if test="id !=  null">			        
			id=#{id},
		</if>
		-->
		<if test="no !=  null">			        
			no=#{no},
		</if>
		<if test="name !=  null">			        
			name=#{name},
		</if>
		<if test="itemNo !=  null">			        
			item_no=#{itemNo},
		</if>
		<if test="itemKey !=  null">			        
			item_key=#{itemKey},
		</if>
		<if test="itemValue !=  null">			        
			item_value=#{itemValue},
		</if>
		<if test="sequence !=  null">			        
			sequence=#{sequence},
		</if>
		<if test="isUse !=  null">			        
			is_use=#{isUse},
		</if>
		<if test="createTime !=  null">			        
			create_time=#{createTime},
		</if>
		<if test="updateTime !=  null">			        
			update_time=#{updateTime},
		</if>
	</sql>
	<sql id="Update_Set_NewObj_Gen">
		<if test="newObj.id !=  null">
			id=#{newObj.id},
		</if>
		<if test="newObj.no !=  null">
			no=#{newObj.no},
		</if>
		<if test="newObj.name !=  null">
			name=#{newObj.name},
		</if>
		<if test="newObj.itemNo !=  null">
			item_no=#{newObj.itemNo},
		</if>
		<if test="newObj.itemKey !=  null">
			item_key=#{newObj.itemKey},
		</if>
		<if test="newObj.itemValue !=  null">
			item_value=#{newObj.itemValue},
		</if>
		<if test="newObj.sequence !=  null">
			sequence=#{newObj.sequence},
		</if>
		<if test="newObj.isUse !=  null">
			is_use=#{newObj.isUse},
		</if>
		<if test="newObj.createTime !=  null">
			create_time=#{newObj.createTime},
		</if>
		<if test="newObj.updateTime !=  null">
			update_time=#{newObj.updateTime},
		</if>
	</sql>
	<sql id="Where_Clause_Params_Gen">
		<if test="params.id !=  null">
			and id=#{params.id}
		</if>
		<if test="params.fromId !=  null">
			and id>#{params.fromId}
		</if>
		<if test="params.no !=  null">
			and no=#{params.no}
		</if>
		<if test="params.name !=  null">
			and name=#{params.name}
		</if>
		<if test="params.itemNo !=  null">
			and item_no=#{params.itemNo}
		</if>
		<if test="params.itemKey !=  null">
			and item_key=#{params.itemKey}
		</if>
		<if test="params.itemValue !=  null">
			and item_value=#{params.itemValue}
		</if>
		<if test="params.sequence !=  null">
			and sequence=#{params.sequence}
		</if>
		<if test="params.isUse !=  null">
			and is_use=#{params.isUse}
		</if>
		<if test="params.createTime !=  null">
			and create_time=#{params.createTime}
		</if>
		<if test="params.updateTime !=  null">
			and update_time=#{params.updateTime}
		</if>
		<include refid="Where_Clause_Params_Extend" />
	</sql>
	<sql id="Where_Clause_Batch_Gen">
		<foreach collection="list" item="item" index="index">
			<if test="index == 0">
				<if test="item.id !=  null">
					and id in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.id}
					</foreach>
				</if>
				<if test="item.no !=  null">
					and no in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.no}
					</foreach>
				</if>
				<if test="item.name !=  null">
					and name in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.name}
					</foreach>
				</if>
				<if test="item.itemNo !=  null">
					and item_no in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.itemNo}
					</foreach>
				</if>
				<if test="item.itemKey !=  null">
					and item_key in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.itemKey}
					</foreach>
				</if>
				<if test="item.itemValue !=  null">
					and item_value in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.itemValue}
					</foreach>
				</if>
				<if test="item.sequence !=  null">
					and sequence in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.sequence}
					</foreach>
				</if>
				<if test="item.isUse !=  null">
					and is_use in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.isUse}
					</foreach>
				</if>
				<if test="item.createTime !=  null">
					and create_time in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.createTime}
					</foreach>
				</if>
				<if test="item.updateTime !=  null">
					and update_time in 
					<foreach collection="list" item="element" index="index" open= "(" close =")" separator=",">
						#{element.updateTime}
					</foreach>
				</if>
			</if>
		</foreach>
	</sql>
	
	<select id="queryById" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT
			<include refid="Column_List_Base_Gen" />
		FROM
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Id_Gen" />
		</where>
		limit 1
	</select>

	<select id="queryByMap" parameterType="java.util.Map" resultMap="BaseResultMap" fetchSize="100">				
		SELECT
			<include refid="Column_List_Base_Gen" />
		FROM
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Normal_Gen" />
		</where>
		<if test="orders !=  null"> order by ${orders} </if>
	</select>
	
	<select id="queryIdsByMap" parameterType="java.util.Map" resultType="java.lang.Long" fetchSize="100">				
		SELECT
			<include refid="Column_List_Id_Gen" />
		FROM
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Normal_Gen" />
		</where>
		<if test="orders !=  null"> order by ${orders} </if>
	</select>
	
	<select id="countByMap" parameterType="java.util.Map" resultType="java.lang.Integer">				
		SELECT
			count(*)
		FROM
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Normal_Gen" />
		</where>
	</select>
	
	<select id="pageQuery" parameterType="com.tower.service.dao.Page" resultMap="BaseResultMap"  fetchSize="100">
		SELECT
			<include refid="Column_List_Base_Gen" />
		FROM
			${params.tKjtTabName}
		<where>
			<if test="params !=  null">
				<include refid="Where_Clause_Params_Gen" />
			</if>
		</where>
			<if test="orders !=  null"> order by ${orders} </if> limit #{start},#{end}
	</select>
	
	<insert id="insert" parameterType="com.oimboi.service.s2s.dao.model.Code" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO	${tKjtTabName}
		(
		<trim suffix="" suffixOverrides=",">
			<if test="id !=null">
				id,
			</if>
			<if test="no !=null">
				no,
			</if>
			<if test="name !=null">
				name,
			</if>
			<if test="itemNo !=null">
				item_no,
			</if>
			<if test="itemKey !=null">
				item_key,
			</if>
			<if test="itemValue !=null">
				item_value,
			</if>
			<if test="sequence !=null">
				sequence,
			</if>
			<if test="isUse !=null">
				is_use,
			</if>
			<if test="createTime !=null">
				create_time,
			</if>
			<if test="updateTime !=null">
				update_time
			</if>
		</trim>
		)
		VALUES(
		<trim suffix="" suffixOverrides=",">
			<if test="id !=null">
				#{id},
			</if>
			<if test="no !=null">
				#{no},
			</if>
			<if test="name !=null">
				#{name},
			</if>
			<if test="itemNo !=null">
				#{itemNo},
			</if>
			<if test="itemKey !=null">
				#{itemKey},
			</if>
			<if test="itemValue !=null">
				#{itemValue},
			</if>
			<if test="sequence !=null">
				#{sequence},
			</if>
			<if test="isUse !=null">
				#{isUse},
			</if>
			<if test="createTime !=null">
				#{createTime},
			</if>
			<if test="updateTime !=null">
				#{updateTime}
			</if>
		</trim>
		)
	</insert>
	
	<update id="updateById" parameterType="java.util.Map">
		update 
			${tKjtTabName}
		<set>
			<include refid="Update_Set_Normal_Gen" />
		</set>
		<where>
			<include refid="Where_Clause_Id_Gen" />
		</where>
	</update>
	
	<update id="cmplxUpdate" parameterType="java.util.Map">
		update 
			${tKjtTabName}
		<set>
			<include refid="Update_Set_NewObj_Gen" />
		</set>
		<where>
			<include refid="Where_Clause_Params_Gen" />	
		</where>
	</update>
	
	<delete id="deleteByMap" parameterType="java.util.Map">		
		DELETE
		FROM
			${tKjtTabName} 
		<where>
			<include refid="Where_Clause_Id_Gen" />
		</where>
	</delete>
	
	<insert id="batchInsert" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		insert into 
			${tKjtTabName}  
			( 
		<foreach collection="batchInsertCols" item="batchInsertCol" index="index" separator=",">
			<trim suffix="" suffixOverrides=",">
				${batchInsertCol}
			</trim>
		</foreach>
		)  
		values 
		<foreach collection="list" item="item" index="index" separator=","> 
		(
			<trim suffix="" suffixOverrides=",">
				<foreach collection="batchInsertProps" item="batchInsertProp" index="index">
					<if test='"id" == batchInsertProp'>
						#{item.id},
					</if>
					<if test='"no" == batchInsertProp'>
						#{item.no},
					</if>
					<if test='"name" == batchInsertProp'>
						#{item.name},
					</if>
					<if test='"itemNo" == batchInsertProp'>
						#{item.itemNo},
					</if>
					<if test='"itemKey" == batchInsertProp'>
						#{item.itemKey},
					</if>
					<if test='"itemValue" == batchInsertProp'>
						#{item.itemValue},
					</if>
					<if test='"sequence" == batchInsertProp'>
						#{item.sequence},
					</if>
					<if test='"isUse" == batchInsertProp'>
						#{item.isUse},
					</if>
					<if test='"createTime" == batchInsertProp'>
						#{item.createTime},
					</if>
					<if test='"updateTime" == batchInsertProp'>
						#{item.updateTime},
					</if>
				</foreach>
			</trim>
		)
		</foreach>
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
	</insert>
	
	<update id="batchUpdate" parameterType="java.util.Map">
		update 
			${tKjtTabName}
		<set>
			<include refid="Update_Set_NewObj_Gen" />
		</set>
		<where>
			<include refid="Where_Clause_Batch_Gen" />
		</where>
	</update>
	
	<delete id="batchDelete"  parameterType="java.util.Map">
		delete 
		from
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Batch_Gen" />
		</where>
	</delete>
	
	<select id="batchQuery"  parameterType="java.util.Map" resultMap="BaseResultMap" fetchSize="100">
		select 
			<include refid="Column_List_Base_Gen" />
		from
			${tKjtTabName}
		<where>
			<include refid="Where_Clause_Batch_Gen" />
		</where>
	</select>
	
	<!--所有Gen结尾的sql是公共的,其表达式都是等值判断表达式，含有Batch的是in值表达式-->
	<sql id="Where_Clause_Id_Extend">
		<!--id扩展表达式; eg: id字段名 between #{startId} and #{endId}-->
	</sql>
	<sql id="Where_Clause_Normal_Extend">
		<!--其他字段扩展表达式; eg: id字段名 between #{startId} and #{endId}-->
	</sql>
	<sql id="Where_Clause_Params_Extend">
		<!--分页&复杂更新条件字段扩展表达式; eg: id字段名 between #{params.startId} and #{params.endId}-->
	</sql>
	
	<!--扩展sql从备注处开始定义，id建议以'有意义的名字'-->
	
</mapper>
